From d6973cfd19884a80f86a0768e3ed6a14d1058be5 Mon Sep 17 00:00:00 2001
From: Aaron <kljsandjb@me.com>
Date: Mon, 12 Oct 2020 19:37:42 +0200
Subject: [PATCH] challenge: IRQ driven transmit & receive

enable the interrupts for net card by
writing to 8259A chip, enable transmit
write-back interrupt for full queue
---
 inc/env.h    |  3 ++-
 kern/e1000.c | 27 ++++++++++++++++++++++++---
 kern/e1000.h |  1 +
 kern/pci.c   |  3 +++
 kern/sched.c |  3 ++-
 kern/trap.c  |  6 ++++++
 6 files changed, 38 insertions(+), 5 deletions(-)

diff --git a/inc/env.h b/inc/env.h
index 43b1f30..9595284 100644
--- a/inc/env.h
+++ b/inc/env.h
@@ -36,7 +36,8 @@ enum {
 	ENV_RUNNABLE,
 	ENV_RUNNING,
 	ENV_NOT_RUNNABLE,
-	ENV_IDE_SLEEPING
+	ENV_IDE_SLEEPING,
+	ENV_NS_WAITING
 };
 
 // Special environment types
diff --git a/kern/e1000.c b/kern/e1000.c
index 46cb455..962fe9f 100644
--- a/kern/e1000.c
+++ b/kern/e1000.c
@@ -2,6 +2,7 @@
 #include <kern/pmap.h>
 #include <kern/pci.h>
 #include <inc/string.h>
+#include <kern/env.h>
 
 // LAB 6: Your driver code here
 
@@ -26,6 +27,15 @@
 #define E1000_TXD_CMD_EOP    0x01000000 /* End of Packet */
 #define E1000_TXD_STAT_DD    0x00000001 /* Descriptor Done */
 
+// interrupt-driven
+#define E1000_ICR      (0x000C0/4)  /* Interrupt Cause Read - R/clr */
+    #define E1000_ICR_TXDW          0x00000001 /* Transmit desc written back */
+
+#define E1000_IMS      (0x000D0/4)  /* Interrupt Mask Set - RW */
+    #define E1000_IMS_TXDW      E1000_ICR_TXDW      /* Transmit desc written back */
+
+#define E1000_IMC      0x000D8  /* Interrupt Mask Clear - WO */
+
 // RX
 #define E1000_RDBAL    (0x02800/4)  /* RX Descriptor Base Address Low - RW */
 #define E1000_RDBAH    (0x02804/4)  /* RX Descriptor Base Address High - RW */
@@ -37,7 +47,6 @@
 #define E1000_RAL      (0x05400/4)  /* Receive Address Low - RW Array */
 #define E1000_RAH      (0x05404/4)  /* Receive Address High - RW Array */
 #define E1000_RAH_AV  0x80000000        /* Receive descriptor valid */
-#define E1000_IMS      (0x000D0/4)  /* Interrupt Mask Set - RW */
 
 #define E1000_RXD_STAT_DD       0x01    /* Descriptor Done */
 #define E1000_RXD_STAT_EOP      0x02    /* End of Packet */
@@ -135,8 +144,6 @@ static void init_rx()
     e1000_bar0[E1000_MTA + 1] = 0;
     e1000_bar0[E1000_MTA + 2] = 0;
     e1000_bar0[E1000_MTA + 3] = 0;
-    // not enable IRQ for now
-    e1000_bar0[E1000_IMS] = 0;
     e1000_bar0[E1000_RCTL] = E1000_RCTL_EN | E1000_RCTL_SECRC | E1000_RCTL_SZ_2048 | E1000_RCTL_BAM;
 }
 
@@ -175,6 +182,10 @@ size_t e1000_transmit(const void *buffer, size_t size)
     }
     // require for re-transmission
     cprintf("lost packet 0x%x\n", buffer);
+    e1000_bar0[E1000_IMS] |= E1000_IMS_TXDW;
+    curenv->env_status = ENV_NS_WAITING;
+    extern void sched_yield();
+    sched_yield();
     return 0;
 }
 
@@ -205,4 +216,14 @@ size_t e1000_receive(void *buffer, size_t size)
     e1000_bar0[E1000_RDT] = current;
     
     return length;
+}
+
+// interrupt handler for transmit full queue or receive empty queue
+void e1000_intr()
+{
+    if (e1000_bar0[E1000_ICR] & E1000_ICR_TXDW)
+    {
+        cprintf("E1000_ICR_TXDW\n");
+    }
+    e1000_bar0[E1000_IMC] = ~0b0;
 }
\ No newline at end of file
diff --git a/kern/e1000.h b/kern/e1000.h
index f82e492..ed05ea5 100644
--- a/kern/e1000.h
+++ b/kern/e1000.h
@@ -12,6 +12,7 @@ volatile uint32_t *e1000_bar0;      // memory mapped E1000 device registers
 
 size_t e1000_transmit(const void *buffer, size_t size);
 size_t e1000_receive(void *buffer, size_t size);
+void e1000_intr();
 
 
 #endif  // SOL >= 6
diff --git a/kern/pci.c b/kern/pci.c
index 5ad5ae7..5cc6f2a 100644
--- a/kern/pci.c
+++ b/kern/pci.c
@@ -5,6 +5,7 @@
 #include <kern/pcireg.h>
 #include <kern/e1000.h>
 #include <kern/pmap.h>
+#include <kern/picirq.h>
 
 // Flag to do "lspci" at bootup
 static int pci_show_devs = 1;
@@ -253,6 +254,8 @@ pci_func_enable(struct pci_func *f)
 		PCI_VENDOR(f->dev_id), PCI_PRODUCT(f->dev_id));
 	cprintf("Device status for E1000 BAR 0 is 0x%x\n",
 		e1000_bar0[E1000_STATUS]);
+	// enable pci interrupts
+	irq_setmask_8259A(irq_mask_8259A & ~(1<<f->irq_line));
 }
 
 int
diff --git a/kern/sched.c b/kern/sched.c
index dab7b3b..e7e4400 100644
--- a/kern/sched.c
+++ b/kern/sched.c
@@ -65,7 +65,8 @@ sched_halt(void)
 		if ((envs[i].env_status == ENV_RUNNABLE ||
 		     envs[i].env_status == ENV_RUNNING ||
 		     envs[i].env_status == ENV_DYING ||
-		     envs[i].env_status == ENV_IDE_SLEEPING))
+		     envs[i].env_status == ENV_IDE_SLEEPING) ||
+			 envs[i].env_status == ENV_NS_WAITING)
 			break;
 	}
 	if (i == NENV) {
diff --git a/kern/trap.c b/kern/trap.c
index ce81dd4..02323bd 100644
--- a/kern/trap.c
+++ b/kern/trap.c
@@ -14,6 +14,7 @@
 #include <kern/cpu.h>
 #include <kern/spinlock.h>
 #include <kern/time.h>
+#include <kern/e1000.h>
 
 static struct Taskstate ts;
 
@@ -287,6 +288,11 @@ trap_dispatch(struct Trapframe *tf)
 				}
 			}
 		
+		case IRQ_OFFSET + 11:
+		    e1000_intr();
+			lapic_eoi();
+			return;
+		
 		default:
 			break;
 		}
-- 
2.24.3 (Apple Git-128)

